name: Deploy to Cloudflare

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  run-ci-tests:
    # Call the reusable CI workflow
    uses: ./.github/workflows/ci.yml
    # Pass secrets required by the test job in ci.yml
    secrets: inherit

  build-docker:
    # Depend on the reusable CI tests job
    needs: run-ci-tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: eigenlayer-ai-agent:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: Dockerfile
          platforms: linux/amd64
      
      - name: Export Docker image
        run: |
          mkdir -p ./dist
          docker save eigenlayer-ai-agent:${{ github.sha }} | gzip > ./dist/agent-image.tar.gz
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: agent-image
          path: ./dist/agent-image.tar.gz
          retention-days: 1

  deploy-container:
    # Updated dependency: Only depends on build-docker now
    needs: build-docker
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: agent-image
          path: ./dist
      
      - name: Install Cloudflare Wrangler
        run: npm install -g wrangler@latest
      
      - name: Set up environment variables
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          API_KEY: ${{ secrets.API_KEY }}
          AGENT_PRIVATE_KEY: ${{ secrets.AGENT_PRIVATE_KEY }}
        run: |
          # Create .env file for Wrangler
          echo "CLOUDFLARE_ACCOUNT_ID=$CLOUDFLARE_ACCOUNT_ID" > .env
          echo "CLOUDFLARE_API_TOKEN=$CLOUDFLARE_API_TOKEN" >> .env
          
          # Check wrangler.toml
          cat wrangler.toml
          
          # Verify the worker.js file exists
          ls -la worker.js
      
      - name: Push Docker image to Cloudflare registry
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          # Load the Docker image from the artifact
          echo "Loading Docker image..."
          gunzip -c ./dist/agent-image.tar.gz | docker load
          
          # Login to Cloudflare registry
          echo "$CLOUDFLARE_API_TOKEN" | docker login registry.cloudflare.com -u "token" --password-stdin
          
          # Tag image for Cloudflare registry
          docker tag eigenlayer-ai-agent:${{ github.sha }} registry.cloudflare.com/$CLOUDFLARE_ACCOUNT_ID/eigenlayer-ai-agent:latest
          
          # Push to Cloudflare registry
          docker push registry.cloudflare.com/$CLOUDFLARE_ACCOUNT_ID/eigenlayer-ai-agent:latest
      
      - name: Deploy Worker
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          API_KEY: ${{ secrets.API_KEY }}
          AGENT_PRIVATE_KEY: ${{ secrets.AGENT_PRIVATE_KEY }}
        run: |
          # Set secrets for the worker
          echo "Setting worker secrets..."
          wrangler secret put API_KEY --name eigenlayer-ai-agent <<< "$API_KEY"
          wrangler secret put AGENT_PRIVATE_KEY --name eigenlayer-ai-agent <<< "$AGENT_PRIVATE_KEY"
          
          # Deploy the worker using wrangler
          echo "Deploying Worker..."
          wrangler deploy worker.js 